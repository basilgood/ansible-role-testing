---
- name: Apt install tools
  apt: name='{{ item }}' update_cache=yes
  with_items:
    - acl
    - git
    - build-essential

- name: Ensure rolespec user exists
  user: name='{{ rolespec_user }}'

- name: Create rolespec directory
  file: state=directory path='{{ rolespec_path }}' owner='{{ rolespec_user }}' group='{{ rolespec_user }}' mode='775'
  when: rolespec_path| default(False)
  register: rolespec_path_register
  failed_when: rolespec_path_register.failed|default(False) and rolespec_path_register.group != 'dialout'

- name: Set acl to allow ssh user to clone repo
  acl: path='{{ rolespec_path }}' entity='{{ ansible_user }}' etype=user permissions=rwx state=present
  when: rolespec_repo| default(False)

- name: Set default acl to allow ssh user to clone repo
  acl: path='{{ rolespec_path }}' entity='{{ ansible_user }}' default=yes etype=user permissions=rwx state=present
  when: rolespec_repo| default(False)

- name: Clone the git repo
  become: no
  git:
    accept_hostkey: yes
    repo: '{{ rolespec_repo }}'
    dest: '{{ rolespec_path }}'
  register: rolespec_repo_status
  when: rolespec_path| default(False) and rolespec_repo| default(False)

- name: Install rolespec
  make:
    chdir: '{{ rolespec_path }}'
    target: install
  become: yes

- name: Make rolespec exe for vagrant
  file:
    path: /usr/local/bin/rolespec
    owner: vagrant
    group: vagrant
    mode: 0755

- name: Ensure if testdir exists
  stat:
    path: "'{{ rolespec_testdir }}'*"
  register: stat_testdir

- name: Rolespecs make test directory
  shell: rolespec -i '{{ rolespec_testdir }}'
  when: stat_testdir == False

- name: Rolespecs make scaffold directories
  shell: rolespec -n '{{ rolespec_role_name }}'
  args:
    chdir: /vagrant/


# - name: Symlink
#   file:
#     src: /vagrant/
#     dest: "'{{ rolespec_testdir }}'/roles/$"
#     state: link
